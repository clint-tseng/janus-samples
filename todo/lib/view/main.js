// Generated by CoffeeScript 1.11.1
(function() {
  var $, DomView, Main, MainView, TodoList, find, from, ref, template,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  $ = require('jquery');

  ref = require('janus'), DomView = ref.DomView, template = ref.template, find = ref.find, from = ref.from;

  TodoList = require('../model/todo-list').TodoList;

  Main = require('../viewmodel/main').Main;

  MainView = (function(superClass) {
    extend(MainView, superClass);

    function MainView() {
      return MainView.__super__.constructor.apply(this, arguments);
    }

    MainView._dom = function() {
      return $('<div class="main"> <div class="left"> <div class="todoList"></div> <div class="toolbar"> <button class="addTodoList">New</button> </div> </div> <div class="right contents"></div> </div>');
    };

    MainView._template = template(find('.left .todoList').render(from.attribute('current')).context('edit').find({
      attributes: {
        style: 'list'
      }
    }), find('.right').render(from('current')));

    MainView.prototype._wireEvents = function() {
      var dom;
      dom = this.artifact();
      return dom.find('button.addTodoList').on('click', (function(_this) {
        return function() {
          var newTodoList;
          newTodoList = new TodoList();
          _this.subject.get('todoLists').add(newTodoList);
          return _this.subject.set('current', newTodoList);
        };
      })(this));
    };

    return MainView;

  })(DomView);

  module.exports = {
    MainView: MainView,
    registerWith: function(library) {
      return library.register(Main, MainView);
    }
  };

}).call(this);
