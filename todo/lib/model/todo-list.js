// Generated by CoffeeScript 1.11.1
(function() {
  var List, Model, Store, TodoList, TodoListFetchRequest, TodoListFetchStore, TodoListSaveRequest, TodoListSaveStore, TodoLists, Todos, attribute, ref, ref1, request, types,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('janus'), Model = ref.Model, attribute = ref.attribute, List = ref.List, types = ref.types;

  ref1 = require('janus').store, Store = ref1.Store, request = ref1.request;

  Todos = require('./todo').Todos;

  TodoList = (function(superClass) {
    extend(TodoList, superClass);

    function TodoList() {
      return TodoList.__super__.constructor.apply(this, arguments);
    }

    TodoList.attribute('name', attribute.TextAttribute);

    TodoList.attribute('todos', (function(superClass1) {
      extend(_Class, superClass1);

      function _Class() {
        return _Class.__super__.constructor.apply(this, arguments);
      }

      _Class.collectionClass = Todos;

      _Class.prototype["default"] = function() {
        return new Todos();
      };

      _Class.prototype.writeDefault = true;

      return _Class;

    })(attribute.CollectionAttribute));

    return TodoList;

  })(Model);

  TodoLists = (function(superClass) {
    extend(TodoLists, superClass);

    function TodoLists() {
      return TodoLists.__super__.constructor.apply(this, arguments);
    }

    TodoLists.modelClass = TodoList;

    return TodoLists;

  })(List);

  TodoListFetchRequest = (function(superClass) {
    extend(TodoListFetchRequest, superClass);

    function TodoListFetchRequest() {
      return TodoListFetchRequest.__super__.constructor.apply(this, arguments);
    }

    return TodoListFetchRequest;

  })(request.FetchRequest);

  TodoListFetchStore = (function(superClass) {
    extend(TodoListFetchStore, superClass);

    function TodoListFetchStore() {
      return TodoListFetchStore.__super__.constructor.apply(this, arguments);
    }

    TodoListFetchStore.prototype._handle = function() {
      var stored;
      stored = localStorage.getItem('todo');
      this.request.set(types.result.success(stored != null ? JSON.parse(stored) : []));
      return Store.Handled;
    };

    return TodoListFetchStore;

  })(Store);

  TodoListSaveRequest = (function(superClass) {
    extend(TodoListSaveRequest, superClass);

    function TodoListSaveRequest(todoLists, options) {
      this.todoLists = todoLists;
      this.options = options != null ? options : {};
      TodoListSaveRequest.__super__.constructor.call(this, this.options);
    }

    return TodoListSaveRequest;

  })(request.UpdateRequest);

  TodoListSaveStore = (function(superClass) {
    extend(TodoListSaveStore, superClass);

    function TodoListSaveStore() {
      return TodoListSaveStore.__super__.constructor.apply(this, arguments);
    }

    TodoListSaveStore.prototype._handle = function() {
      localStorage.setItem('todo', JSON.stringify(this.request.todoLists.serialize()));
      return Store.Handled;
    };

    return TodoListSaveStore;

  })(Store);

  module.exports = {
    TodoList: TodoList,
    TodoLists: TodoLists,
    TodoListFetchRequest: TodoListFetchRequest,
    TodoListFetchStore: TodoListFetchStore,
    TodoListSaveRequest: TodoListSaveRequest,
    TodoListSaveStore: TodoListSaveStore,
    registerWith: function(library) {
      library.register(TodoListFetchRequest, TodoListFetchStore);
      return library.register(TodoListSaveRequest, TodoListSaveStore);
    }
  };

}).call(this);
