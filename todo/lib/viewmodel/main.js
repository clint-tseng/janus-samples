// Generated by CoffeeScript 1.11.1
(function() {
  var List, Main, Model, TodoListFetchRequest, TodoListSaveRequest, TodoLists, attribute, from, ref, ref1,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('janus'), Model = ref.Model, attribute = ref.attribute, from = ref.from, List = ref.List;

  ref1 = require('../model/todo-list'), TodoLists = ref1.TodoLists, TodoListFetchRequest = ref1.TodoListFetchRequest, TodoListSaveRequest = ref1.TodoListSaveRequest;

  Main = (function(superClass) {
    extend(Main, superClass);

    function Main() {
      return Main.__super__.constructor.apply(this, arguments);
    }

    Main.attribute('todoLists', (function(superClass1) {
      extend(_Class, superClass1);

      function _Class() {
        return _Class.__super__.constructor.apply(this, arguments);
      }

      _Class.contains = TodoLists;

      _Class.prototype.request = function() {
        return new TodoListFetchRequest();
      };

      return _Class;

    })(attribute.ReferenceAttribute));

    Main.attribute('current', (function(superClass1) {
      extend(_Class, superClass1);

      function _Class() {
        return _Class.__super__.constructor.apply(this, arguments);
      }

      _Class.prototype.values = function() {
        return this.model.watch('todoLists');
      };

      _Class.prototype.transient = true;

      return _Class;

    })(attribute.EnumAttribute));

    Main.prototype._initialize = function() {
      this.resolveNow('todoLists', this.get('app'));
      return window.addEventListener('beforeunload', (function(_this) {
        return function(event) {
          _this.get('app').getStore(new TodoListSaveRequest(_this.get('todoLists'))).handle();
          return void 0;
        };
      })(this));
    };

    return Main;

  })(Model);

  module.exports = {
    Main: Main
  };

}).call(this);
